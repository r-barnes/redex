"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[398],{3905:function(e,n,t){t.r(n),t.d(n,{MDXContext:function(){return d},MDXProvider:function(){return c},mdx:function(){return g},useMDXComponents:function(){return l},withMDXComponents:function(){return u}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(){return o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},o.apply(this,arguments)}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=r.createContext({}),u=function(e){return function(n){var t=l(n.components);return r.createElement(e,o({},n,{components:t}))}},l=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(d.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=l(t),c=a,f=u["".concat(i,".").concat(c)]||u[c]||m[c]||o;return t?r.createElement(f,s(s({ref:n},d),{},{components:t})):r.createElement(f,s({ref:n},d))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var d=2;d<o;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},94185:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return l}});var r=t(83117),a=t(80102),o=(t(67294),t(3905)),i=["components"],s={id:"usage",title:"Usage",sidebar_position:4},p=void 0,d={unversionedId:"getting_started/usage",id:"getting_started/usage",title:"Usage",description:"Basic Usage",source:"@site/docs/getting_started/usage.md",sourceDirName:"getting_started",slug:"/getting_started/usage",permalink:"/docs/getting_started/usage",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"usage",title:"Usage",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Passes",permalink:"/docs/getting_started/passes"},next:{title:"Using ProGuard Rules with Redex",permalink:"/docs/examples/proguard"}},u={},l=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Tracing",id:"tracing",level:2}],c={toc:l};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.mdx)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("h2",{id:"basic-usage"},"Basic Usage"),(0,o.mdx)("p",null,"To use ReDex, first build your app and find the APK for it.  Then the simplest\ninvocation is:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"[python3] redex.py path/to/your.apk -o path/to/output.apk\n")),(0,o.mdx)("p",null,"A more complete invocation with:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},"the default configuration setting ",(0,o.mdx)("a",{parentName:"li",href:"https://github.com/facebook/redex/blob/master/config/default.config"},"config/default.config")),(0,o.mdx)("li",{parentName:"ul"},"access to the Android SDK tools")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"[python3] redex.py -c default.config \\\n  --android-sdk-path path/to/android/sdk \\\n  path/to/your.apk -o path/to/output.apk\n")),(0,o.mdx)("p",null,"The full set of options can be found with"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"[python3] redex.py --help\n")),(0,o.mdx)("p",null,"and at the time of writing is"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"usage: redex.py [-h] [-o [OUT]] [-j JARPATHS] [--redex-binary [REDEX_BINARY]]\n                [-c CONFIG] [--sign] [-s [KEYSTORE]] [-a [KEYALIAS]]\n                [-p [KEYPASS]] [-u] [--unpack-dest UNPACK_DEST] [-w [WARN]]\n                [-d] [--dev] [-m [PROGUARD_MAP]] [--printseeds [PRINTSEEDS]]\n                [--used-js-assets USED_JS_ASSETS] [-P PROGUARD_CONFIGS]\n                [-k [KEEP]] [-A [ARCH]] [-S PASSTHRU] [-J PASSTHRU_JSON]\n                [--lldb] [--gdb] [--ignore-zipalign] [--verify-none-mode]\n                [--enable-instrument-pass] [--is-art-build] [--enable-pgi]\n                [--post-lowering] [--disable-dex-hasher] [--page-align-libs]\n                [--side-effect-summaries SIDE_EFFECT_SUMMARIES]\n                [--escape-summaries ESCAPE_SUMMARIES] [--stop-pass STOP_PASS]\n                [--output-ir OUTPUT_IR]\n                [--debug-source-root [DEBUG_SOURCE_ROOT]] [--always-clean-up]\n                [--cmd-prefix CMD_PREFIX] [--reset-zip-timestamps] [-q]\n                [--android-sdk-path ANDROID_SDK_PATH]\n                input_apk\n\nGiven an APK, produce a better APK!\n\npositional arguments:\n  input_apk             Input APK file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o [OUT], --out [OUT]\n                        Output APK file name (defaults to redex-out.apk)\n  -j JARPATHS, --jarpath JARPATHS\n                        Path to dependent library jar file\n  --redex-binary [REDEX_BINARY]\n                        Path to redex binary\n  -c CONFIG, --config CONFIG\n                        Configuration file\n  --sign, --no-sign     Sign the apk after optimizing it\n  -s [KEYSTORE], --keystore [KEYSTORE]\n  -a [KEYALIAS], --keyalias [KEYALIAS]\n  -p [KEYPASS], --keypass [KEYPASS]\n  -u, --unpack-only     Unpack the apk and print the unpacked directories,\n                        don't run any redex passes or repack the apk\n  --unpack-dest UNPACK_DEST\n                        Specify the base name of the destination directories;\n                        works with -u\n  -w [WARN], --warn [WARN]\n                        Control verbosity of warnings\n  -d, --debug           Unpack the apk and print the redex command line to run\n  --dev                 Optimize for development speed\n  -m [PROGUARD_MAP], --proguard-map [PROGUARD_MAP]\n                        Path to proguard mapping.txt for deobfuscating names\n  --printseeds [PRINTSEEDS]\n                        File to print seeds to\n  --used-js-assets USED_JS_ASSETS\n                        A JSON file (or files) containing a list of resources\n                        used by JS\n  -P PROGUARD_CONFIGS, --proguard-config PROGUARD_CONFIGS\n                        Path to proguard config\n  -k [KEEP], --keep [KEEP]\n                        [deprecated] Path to file containing classes to keep\n  -A [ARCH], --arch [ARCH]\n                        Architecture; one of arm/armv7/arm64/x86_64/x86\"\n  -S PASSTHRU           Arguments passed through to redex\n  -J PASSTHRU_JSON      JSON-formatted arguments passed through to redex\n  --lldb                Run redex binary in lldb\n  --gdb                 Run redex binary in gdb\n  --ignore-zipalign     Ignore if zipalign is not found\n  --verify-none-mode    Enable verify-none mode on redex\n  --enable-instrument-pass\n                        Enable InstrumentPass if any\n  --is-art-build        States that this is an art only build\n  --enable-pgi          If not passed, Profile Guided Inlining is disabled\n  --post-lowering       Specifies whether post lowering steps should be run\n  --disable-dex-hasher  Disable DexHasher\n  --page-align-libs     Preserve 4k page alignment for uncompressed libs\n  --side-effect-summaries SIDE_EFFECT_SUMMARIES\n                        Side effect information for external methods\n  --escape-summaries ESCAPE_SUMMARIES\n                        Escape information for external methods\n  --stop-pass STOP_PASS\n                        Stop before a pass and dump intermediate dex and IR\n                        meta data to a directory\n  --output-ir OUTPUT_IR\n                        Stop before stop_pass and dump intermediate dex and IR\n                        meta data to output_ir folder\n  --debug-source-root [DEBUG_SOURCE_ROOT]\n                        Root directory that all references to source files in\n                        debug information is given relative to.\n  --always-clean-up     Clean up temporaries even under failure\n  --cmd-prefix CMD_PREFIX\n                        Prefix redex-all with\n  --reset-zip-timestamps\n                        Reset zip timestamps for deterministic output\n  -q, --quiet           Do not be verbose, and override TRACE.\n  --android-sdk-path ANDROID_SDK_PATH\n                        Path to Android SDK\n")),(0,o.mdx)("p",null,"From here, you may want to read the ",(0,o.mdx)("a",{parentName:"p",href:"/docs/getting_started/configuring"},"configuration guide")," and details\nabout the ",(0,o.mdx)("a",{parentName:"p",href:"/docs/getting_started/passes"},"passes"),"."),(0,o.mdx)("p",null,"The result ",(0,o.mdx)("inlineCode",{parentName:"p"},"output.apk")," should be smaller and faster than the\ninput."),(0,o.mdx)("h2",{id:"tracing"},"Tracing"),(0,o.mdx)("p",null,"If you want some statistics about each pass, you can turn on tracing:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"export TRACE=1\n")),(0,o.mdx)("p",null,"More specifically, tracing has ",(0,o.mdx)("a",{parentName:"p",href:"https://github.com/facebook/redex/blob/c5d5651b8b3ae9fda7b3305de9f55e1b82077a2d/libredex/Trace.h#L20"},"categories"),"\nand levels. For a ",(0,o.mdx)("inlineCode",{parentName:"p"},"TRACE(X, Y, msg)")," statement in the code to be logged,\ncategory ",(0,o.mdx)("inlineCode",{parentName:"p"},"X")," must have level ",(0,o.mdx)("inlineCode",{parentName:"p"},"Y")," or higher:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"export TRACE=X:1,Y:2,Z:3\n")),(0,o.mdx)("p",null,"The output of tracing can also be redirected to a file with the ",(0,o.mdx)("inlineCode",{parentName:"p"},"TRACEFILE"),"\nvariable:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"export TRACEFILE=/path/to/trace.txt\n")))}m.isMDXComponent=!0}}]);